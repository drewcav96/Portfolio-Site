@page "/projects/invoice-indexing"

<!-- Heading -->
<Heading Size=HeadingSize.Is2 Margin=Margin.Is2.OnY TextColor=TextColor.Light>
    Invoice Indexing Software
</Heading>
<Lead Margin=Margin.Is3.OnY>
    Document manager integrated with business software systems and enhanced auditing intranet tool.
</Lead>

<!-- Summary -->
<Paragraph Margin=Margin.Is2.OnY>
    This project aimed to unify critical business applications that separately handled purchasing and processing of payments.
    Hard copy invoices are scanned and uploaded from remote branches with its datapoints indexed on a SQL database.
    Additionally, this solution eliminated the need for printing and filing of invoices at the corporate office.
    Background services run continuously to audit the system, enforce data integrity, and reference links between external business applications.
</Paragraph>

<!-- Breakdown -->
<Row>
    <Column ColumnSize=ColumnSize.IsHalf.OnTablet>
        <!-- Operational Goals -->
        <Card Background=Background.Primary Margin=Margin.Is3.OnY>
            <CardBody>
                <CardTitle Size=4>
                    <Icon Name=Blazorise.Icons.FontAwesome.FontAwesomeIcons.Bullseye />
                    Operational Goals
                </CardTitle>
                <CardText>
                    <UnorderedList>
                        <UnorderedListItem>
                            Enable remote branches to quickly upload scanned invoice copies to corporate for billing.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Create a link between FMIS and ERP systems for an invoice represented by a purchase order and voucher, respectively.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Provide branch managers with a resource to upload and review expense reports.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Establish an indexed resource to assist with month-end and quarterly review processes.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Assist both internal and external audits with highly customizable search features and routine background congruency processes.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Serve as a centralized resource of vendors available to each branch.
                        </UnorderedListItem>
                    </UnorderedList>
                </CardText>
            </CardBody>
        </Card>
    </Column>

    <Column ColumnSize=ColumnSize.IsHalf.OnTablet>
        <!-- Accounting Goals -->
        <Card Background=Background.Info Margin=Margin.Is3.OnY>
            <CardBody>
                <CardTitle Size=4>
                    <Icon Name=Blazorise.Icons.FontAwesome.FontAwesomeIcons.DollarSign />
                    Accounting Goals
                </CardTitle>
                <CardText>
                    <UnorderedList>
                        <UnorderedListItem>
                            Eliminate daily manual data entry of invoices into ERP software.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Reduce paper and ink footprint with an indexed repository of soft-copies.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Supply reports and tools to Accounts Payable not readily available in ERP software tailored to unique business requirements.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Keep a record of all edits and lifecycle changes of an invoice from initial upload to final payment.
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Generate invoice, expense report, and vendor spreadsheet reports on-demand from supplied parameters.
                        </UnorderedListItem>
                    </UnorderedList>
                </CardText>
            </CardBody>
        </Card>
    </Column>

    <Column ColumnSize=ColumnSize.IsFull>
        <!-- Technologies -->
        <Card Background=Background.Secondary Margin=Margin.Is3.OnY>
            <CardBody>
                <CardTitle Size=4>
                    <Icon Name=Blazorise.Icons.FontAwesome.FontAwesomeIcons.Cogs />
                    Technologies
                </CardTitle>
                <CardText>
                    <UnorderedList>
                        <UnorderedListItem>
                            ASP.NET Core MVC 6.x
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Active Directory Authentication
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Policy &amp; Resource-based Authorization of Areas for branch isolation
                        </UnorderedListItem>
                        <UnorderedListItem>
                            SQL Server with Entity Framework data layer
                        </UnorderedListItem>
                        <UnorderedListItem>
                            Bootstrap UI/UX design
                        </UnorderedListItem>
                        <UnorderedListItem>
                            3PLs: ClosedXML, CsvHelper, PdfPig, EFCore Triggered, LinqKit, Serilog
                        </UnorderedListItem>
                    </UnorderedList>
                </CardText>
            </CardBody>
        </Card>
    </Column>
</Row>

<!-- Showcase -->
<Div Margin=Margin.Is3.OnY>
    <Tabs SelectedTab="field" TabPosition=TabPosition.Top Background=Background.Light Border=Border.RoundedTop Padding=Padding.Is2.OnY.FromTop.OnTablet.Is3.OnX.OnTablet>
        <Items>
            <Tab Name="field" Class="tab-item">
                <Icon Name=Blazorise.Icons.FontAwesome.FontAwesomeIcons.Users />
                Field Use
            </Tab>
            <Tab Name="ap" Class="tab-item">
                <Icon Name=Blazorise.Icons.FontAwesome.FontAwesomeIcons.FileInvoiceDollar />
                Accounts Payable
            </Tab>
            <Tab Name="audit" Class="tab-item">
                <Icon Name=Blazorise.Icons.FontAwesome.FontAwesomeIcons.SearchDollar />
                Auditing
            </Tab>
            <Tab Name="sys" Class="tab-item">
                <Icon Name=Blazorise.Icons.FontAwesome.FontAwesomeIcons.Lock />
                System Config
            </Tab>
        </Items>

        <Content>
            <!-- Field Users -->
            <TabPanel Name="field">
                @CarouselField
            </TabPanel>

            <!-- Accounts Payable -->
            <TabPanel Name="ap">
                @CarouselAP
            </TabPanel>

            <!-- Auditing -->
            <TabPanel Name="audit">
                @CarouselAudit
            </TabPanel>

            <!-- System Config -->
            <TabPanel Name="sys">
                @CarouselSys
            </TabPanel>
        </Content>
    </Tabs>
</Div>

@code {
    private static readonly RenderFragment CarouselField = __builder =>
    {
        <Carousel Autoplay=false>
            <CarouselSlide Name="invc-upload">
                <Anchor To="img/invc/field/invc-upload.png" Target=Target.Blank>
                    <Image Source="img/invc/field/invc-upload.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    User enters pertinent invoice data into upload form.
                    Validation is performed against the database context in real time.
                </Small>
            </CarouselSlide>

            <CarouselSlide Name="invc-detail">
                <Anchor To="img/invc/field/invc-detail.png" Target=Target.Blank>
                    <Image Source="img/invc/field/invc-detail.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Detail display of an upload with document embed.
                    One or more documents may be attached, and system link details are displayed in the
                    <Strong>
                        Purchase Order
                    </Strong>
                    and
                    <Strong>
                        Voucher
                    </Strong>
                    tabs.
                </Small>
            </CarouselSlide>

            <CarouselSlide Name="invc-list">
                <Anchor To="img/invc/field/invc-list.png" Target=Target.Blank>
                    <Image Source="img/invc/field/invc-list.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Invoice list screen which shows all uploads for a given location.
                    Results can be filtered, ordered, and paginated at the database layer before rendering for optimal performance.
                </Small>
            </CarouselSlide>

            <CarouselSlide Name="invc-polist">
                <Anchor To="img/invc/field/invc-polist.png" Target=Target.Blank>
                    <Image Source="img/invc/field/invc-polist.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Purchase Order list which queries live results from a production business application.
                    Typically the starting point for field user uploading, as the invoice must be linked to a Purchase Order out of the FMIS software.
                </Small>
            </CarouselSlide>

            <CarouselSlide Name="vend-list">
                <Anchor To="img/invc/field/vend-list.png" Target=Target.Blank>
                    <Image Source="img/invc/field/vend-list.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Vendor list for a given location.
                    Not all Vendors are made available for use at every location, so one role of this application is to provide granular control over which Vendors may be used for uploads at each location.
                </Small>
            </CarouselSlide>
        </Carousel>
    };

    private static readonly RenderFragment CarouselAP = __builder =>
    {
        <Carousel Autoplay=false>
            <CarouselSlide Name="invc-print">
                <Anchor To="img/invc/ap/invc-print.png" Target=Target.Blank>
                    <Image Source="img/invc/ap/invc-print.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Bulk print preview pane that allows payables to send one job of several documents to the printer if necessary for processing.
                </Small>
            </CarouselSlide>

            <CarouselSlide Name="vouch-export">
                <Anchor To="img/invc/ap/vouch-export.png" Target=Target.Blank>
                    <Image Source="img/invc/ap/vouch-export.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Automatic export of untethered invoices to the ERP system for bulk import.
                    Ensures data entry validity and consistency by eliminating risk of typos.
                </Small>
            </CarouselSlide>

            <CarouselSlide Name="vouch-link">
                <Anchor To="img/invc/ap/vouch-link.png" Target=Target.Blank>
                    <Image Source="img/invc/ap/vouch-link.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Background service occasionally checks ERP system for newly created vouchers.
                    Vouchers that match invoice details establish a link between the systems, allowing the application to track its payment progress.
                </Small>
            </CarouselSlide>
        </Carousel>
    };

    private static readonly RenderFragment CarouselAudit = __builder =>
    {
        <Carousel Autoplay=false>
            <CarouselSlide Name="invc-search">
                <Anchor To="img/invc/audit/invc-search.png" Target=Target.Blank>
                    <Image Source="img/invc/audit/invc-search.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Comprehensive filtering capability allows directors and auditors to quickly find invoices matching any of the available data points.
                </Small>
            </CarouselSlide>

            <CarouselSlide Name="invc-report">
                <Anchor To="img/invc/audit/invc-report.png" Target=Target.Blank>
                    <Image Source="img/invc/audit/invc-report.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Report feature exports invoices matching the filter to Excel if necessary for external documentation.
                </Small>
            </CarouselSlide>
        </Carousel>
    };

    private static readonly RenderFragment CarouselSys = __builder =>
    {
        <Carousel Autoplay=false>
            <CarouselSlide Name="gp-list">
                <Anchor To="img/invc/sys/gp-list.png" Target=Target.Blank>
                    <Image Source="img/invc/sys/gp-list.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Authentication and Authorization are managed by Windows Active Directory.
                    Group Policies are added and their roles are configured via the Group Policy Manager.
                </Small>
            </CarouselSlide>

            <CarouselSlide Name="territory-opt">
                <Anchor To="img/invc/sys/territory-opt.png" Target=Target.Blank>
                    <Image Source="img/invc/sys/territory-opt.png" Display=Display.Block Width=Width.Is100 />
                </Anchor>
                <Small Position=Position.Absolute.Bottom.Is0.Start.Is50.Translate.MiddleX Background=Background.Dark Padding=Padding.Is2 Border=Border.RoundedTop>
                    Each location is configured to only allow members of the specified local Group Policies to have certain rights within it.
                    If a user does not belong to a Group Policy that has global or local access rights to that location, access is forbidden.
                </Small>
            </CarouselSlide>
        </Carousel>
    };
}
